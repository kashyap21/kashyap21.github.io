if (self.CavalryLogger) { CavalryLogger.start_js(["l4FjE"]); }

__d("MercuryThreadReadToggle.react",["fbt","invariant","MercuryThreadActions","React","ReadToggle.react"],(function(a,b,c,d,e,f,g,h){"use strict";__p&&__p();var i;c=b("React").PropTypes;d=babelHelpers.inherits(a,b("React").PureComponent);i=d&&d.prototype;function a(){var a,c;for(var d=arguments.length,e=new Array(d),f=0;f<d;f++)e[f]=arguments[f];return c=(a=i.constructor).call.apply(a,[this].concat(e)),this.$1=function(a){a&&(a.preventDefault(),a.stopPropagation());a=b("MercuryThreadActions").getForFBID(this.props.viewer);this.props.unreadCount>0?a.markRead(this.props.threadID):a.markUnread(this.props.threadID)}.bind(this),c}a.prototype.render=function(){this.props.unreadCount>=0||h(0,undefined);return b("React").createElement(b("ReadToggle.react"),{isRead:this.props.unreadCount===0,onClick:this.$1,readLabel:g._("Mark as Unread"),unreadLabel:g._("Mark as Read")})};a.propTypes={threadID:c.string.isRequired,viewer:c.string.isRequired,unreadCount:c.number.isRequired};e.exports=a}),null);