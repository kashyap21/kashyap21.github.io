if (self.CavalryLogger) { CavalryLogger.start_js(["s91CM"]); }

__d("MercuryPresenceIndicator.react",["cx","fbt","Arbiter","AvailableListConstants","MercuryIDs","PresenceStatus","React","SubscriptionsHandler"],(function(a,b,c,d,e,f,g,h){"use strict";__p&&__p();var i;c=b("React").PropTypes;d=babelHelpers.inherits(a,b("React").PureComponent);i=d&&d.prototype;function a(){var a,c;for(var d=arguments.length,e=new Array(d),f=0;f<d;f++)e[f]=arguments[f];return c=(a=i.constructor).call.apply(a,[this].concat(e)),this.$2=function(){if(!b("MercuryIDs").isCanonical(this.props.threadID))return null;else{var a=b("MercuryIDs").getUserIDFromThreadID(this.props.threadID);return b("PresenceStatus").get(a)}}.bind(this),c}a.prototype.componentDidMount=function(){this.$1=new(b("SubscriptionsHandler"))(),this.$1.addSubscriptions(b("Arbiter").subscribe(b("AvailableListConstants").ON_AVAILABILITY_CHANGED,function(){return this.forceUpdate()}.bind(this)))};a.prototype.componentWillUnmount=function(){this.$1&&this.$1.release()};a.prototype.render=function(){var a=this.$2();return b("React").createElement("span",{className:this.$3(a)},b("React").createElement("span",{className:"accessible_elem"},this.$4(a)))};a.prototype.$3=function(a){return"presenceIndicator"+(b("MercuryIDs").isGroupChat(this.props.threadID)?" groupThread":"")+(a==b("AvailableListConstants").ACTIVE?" presenceActive":"")};a.prototype.$4=function(a){switch(a){case b("AvailableListConstants").ACTIVE:return h._("Active");default:return null}};a.propTypes={threadID:c.string.isRequired};e.exports=a}),null);